<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stepguide.backend.domain.accountTransfer.mapper.AccountTransferMapper">

    <!-- 내 전체 계좌 조회 -->
    <select id="findAccountsByUserId"
            resultType="com.stepguide.backend.domain.accountTransfer.entity.AccountTransferVO">
        SELECT *
        FROM accounts
        WHERE user_id = #{userId}
    </select>

    <!-- 특정 계좌내역 조회 -->
    <select id="findAccountsByAccountId"
            resultType="com.stepguide.backend.domain.accountTransfer.entity.AccountTransferVO">
        SELECT *
        FROM transactions
        WHERE account_id = #{accountId}
        ORDER BY transaction_date DESC
    </select>

    <!-- 출금 계좌 조회 -->
    <select id="findAccountByAccountNumber"
            resultType="com.stepguide.backend.domain.accountTransfer.entity.AccountTransferVO">
        SELECT *
        FROM accounts
        WHERE account_number = #{accountNumber}
          AND bank_code = #{bankCode}
    </select>

    <!-- 출금 계좌 잔액 업데이트 -->
    <update id="updateAccountBalance">
        UPDATE accounts
        SET balance = #{balance}, updated_at = NOW()
        WHERE account_id = #{accountId}
    </update>
    <update id="updateDelayedTransactionStatus">
        UPDATE delayed_transactions
        SET status = #{status}
        WHERE delayed_transaction_id = #{delayedTransactionId}
    </update>

    <!-- 거래 내역 저장 -->
    <insert id="insertTransactions">
        INSERT INTO transactions(
                                 account_id,
                                 status,
                                 send_bank_code,
                                 transaction_amount,
                                 created_time,
                                 deposit_withdrawal,
                                 payee_account_number,
                                 account_holder_name,
                                 memo
        )
        VALUES (
                #{accountId},
                #{status},
                #{sendBankCode},
                #{transactionAmount},
                #{createdTime},
                #{depositWithdrawal},
                #{payeeAccountNumber},
                #{accountHolderName},
                #{memo}
        )
    </insert>
    <insert id="insertDelayedTransactions">
        INSERT INTO delayed_transactions (
            account_id,
            send_bank_code,
            transaction_amount,
            deposit_withdrawal,
            payee_account_number,
            account_holder_name,
            memo,
            status,
            scheduled_time,
            created_time
        ) VALUES (
                     #{accountId},
                     #{sendBankCode},
                     #{transactionAmount},
                     #{depositWithdrawal},
                     #{payeeAccountNumber},
                     #{accountHolderName},
                     #{memo},
                     #{status},
                     #{scheduledTime},
                     #{createdTime}
                 )
    </insert>

    <select id="findAccountTransactions"
            resultType="com.stepguide.backend.domain.accountTransfer.entity.AccountTransferVO">
        SELECT *
        FROM transactions
        WHERE account_id = #{accountId}
        order by created_time desc, transaction_id desc
    </select>
    <select id="findDelayedTransactionsReady"
            resultType="com.stepguide.backend.domain.accountTransfer.dto.AccountTransferDTO">
        SELECT
        dt.delayed_transaction_id AS dealyedTransactionId,
        dt.send_bank_code AS sendBankCode,
        dt.transaction_amount AS transactionAmount,
        dt.payee_account_number AS payeeAccountNumber,
        dt.memo AS memo,
        a.account_number AS accountNumber,
        a.bank_code AS bankCode
        FROM delayed_transactions dt
        LEFT JOIN accounts a ON dt.account_id = a.account_id
        WHERE dt.status = 'PENDING'
        AND dt.scheduled_time &lt;= NOW()
    </select>

    <!-- 테이블 젤 위 계좌 조회 -->
    <select id="findAccountOneByUseerId"
            resultType="com.stepguide.backend.domain.accountTransfer.entity.AccountTransferVO">
        SELECT *
        FROM accounts
        WHERE user_id = #{userId}
        ORDER BY account_id asc
        LIMIT 1;
    </select>


</mapper>