plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.stepguide'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MyBatis + MySQL
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'com.mysql:mysql-connector-j'

    implementation 'org.springframework:spring-tx'

    // JWT
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // ✅ WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // ✅ Redis (Lettuce 사용)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // ✅ STOMP 메시지 브로커 지원
    implementation 'org.springframework:spring-messaging'

    // ✅ JSON 직렬화/역직렬화 (메시지 payload 용)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // ✅ Lombok (이미 있을 수 있음)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Mockito + JUnit 5 통합 (MockitoExtension 사용 시)
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'

    // Hamcrest (matchesPattern 등으로 응답 검증 시)
    testImplementation 'org.hamcrest:hamcrest:2.2'

    // ✅ 테스트용 추가
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    // FireBase
    implementation 'com.google.firebase:firebase-admin:9.2.0'

}

tasks.named('test') {
    useJUnitPlatform()
}

